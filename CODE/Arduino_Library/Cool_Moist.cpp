/*	LACOOL_CO's GENERAL LIBRARY
	TYPE : SENSOR	-	MODEL : Grove Moisture Sensor
	ROLE : 	Le Petit Cool Moisture Sensor
			Le Cool Stick Moisture Sensor
	@author Maximilien Daman	15/11/2015
	Mail : max@lacool.co	Web : www.lacool.co
 */

//Inclusion des librairies
	#include "Arduino.h"
	#include "PetitCool.h"

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////CONSTRUCTEURS///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////	
Cool_Moist::Cool_Moist()
{}

void Cool_Moist::begin(uint8_t ConnectPin)
{
	MoistPin = ConnectPin + 54;
	pinMode(MoistPin, INPUT);
	setError(0);
}
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////////ERRORLEVEL///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
uint8_t Cool_Moist::errorlevel()
{	//A STABILISER//
/* //Initialisation:
	int NbTry = 2;
	int Temp[NbTry];
	int M[2*NbTry];
	int Test = 0;
//Test de fonctionnement:
	for(int i=0; i<NbTry; i++)
	{
		M[2*i] = analogRead(MoistPin);
		delay(1);
		M[2*i+1] = analogRead(MoistPin);
		delay(1);
		Temp[i] = (M[2*i]>M[2*i+1])?(M[2*i]-M[2*i+1]):(M[2*i+1]-M[2*i]);
		Temp[i] = (Temp[i]>2)?0:1;
	}
	for(int i=0; i<NbTry-1; i++)
	{
		Test += (Temp[2*i]==Temp[2*i+1]);
	}
 *///Niveau d erreur:
	ErrorLevel = 0;
	return ErrorLevel;
}
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////